name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options:
          --health-cmd="pg_isready -U testuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      ENVIRONMENT: test
      DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python (or Node.js, etc.)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt  # or npm install for Node

      - name: Run tests
        run: |
          python -m pytest  # or npm test, ./gradlew test, etc.
        # If you have coverage: coverage run -m pytest && coverage report

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}  # Use a token, not password

      - name: Extract metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/task_manager
          tags: |
            latest
            ${{ github.sha }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}